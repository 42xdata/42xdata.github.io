<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>http://www.42xdata.com/feed.atom</id>
  <updated>2014-10-07T00:00:00Z</updated>
  <link href="http://www.42xdata.com/" />
  <link href="http://www.42xdata.com/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="http://www.42xdata.com/feed.atom">
    <title type="text">Weekly Readings</title>
    <id>http://www.42xdata.com/2014/10/7/WeeklyReading</id>
    <updated>2014-10-07T00:00:00Z</updated>
    <link href="http://www.42xdata.com/2014/10/7/WeeklyReading" />
    <author>
      <name>42xdata</name>
    </author>
    <content type="html">&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://news.ycombinator.com/item?id=8416455&quot;&gt;History of Apache Storm and Lessons Learned&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Great reading. One thing I learned is thinking carefully at the very beginning to overcome outstanding other solutions. It also means the key technology can happen at a very eary stage.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://news.ycombinator.com/item?id=8244086&quot;&gt;Invertiable Bloom Lookup Tables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a paper I'd like to read long times ago. It reminds me when I attend the presentation of WWW'14 best paper: Efficient Estimation for High Similarities using Odd Sketches [&lt;a class=&quot;reference external&quot; href=&quot;http://www.itu.dk/people/pagh/papers/oddsketch.pdf&quot;&gt;pdf&lt;/a&gt; | &lt;a class=&quot;reference external&quot; href=&quot;http://www.itu.dk/people/pagh/papers/oddsketch_slides.pdf&quot;&gt;slides&lt;/a&gt; ] (It aims to compute Jarcard Similarity when two sets are very similar to each other.)&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://accu.org/content/conf2013/Tobias_Darm_Effective_GoF_Patterns.pdf&quot;&gt;Effective GoF Patterns with C++ 11 and Boost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a detailed implementation of modern GoF pattern. I planned to type each example and learn.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.tokutek.com/wp-content/uploads/2012/09/BenderKuszmaul-tutorial-xldb12.pdf&quot;&gt;Data Structure and Algorithms for Big Databases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a presenation of various I/O efficient algorithm in the model of external I/O model.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://www.42xdata.com/feed.atom">
    <title type="text">Static Generated Website</title>
    <id>http://www.42xdata.com/2014/10/3/a-minimal-static-generated-blog</id>
    <updated>2014-10-03T00:00:00Z</updated>
    <link href="http://www.42xdata.com/2014/10/3/a-minimal-static-generated-blog" />
    <author>
      <name>42xdata</name>
    </author>
    <content type="html">&lt;p&gt;I've searched for a static generated blog for a long time. The search is over now.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://www.42xdata.com/feed.atom">
    <title type="text">Correlation</title>
    <id>http://www.42xdata.com/2012/03/04/correlation</id>
    <updated>2012-03-04T00:00:00Z</updated>
    <link href="http://www.42xdata.com/2012/03/04/correlation" />
    <author>
      <name>42xdata</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;what-is-correlation&quot;&gt;
&lt;h2&gt;What is correlation ?&lt;/h2&gt;
&lt;p&gt;Keyword correlation is an important relation in data.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The maximal information coefficient (MIC) is a measure of
two-variable dependence designed specifically for rapid exploration
of many-dimensional data sets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.exploredata.net/&quot;&gt;http://www.exploredata.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.sciencemag.org/content/334/6062/1502.full?ijkey=l9Qe0i/BE6ZOI&amp;amp;keytype=ref&amp;amp;siteid=sci&quot;&gt;Comments&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
Most scientists will be familiar with the use of Pearson's
correlation coefficient r to measure the strength of association
between a pair of variables: for example, between the height of a
child and the average height of their parents (r ≈ 0.5; see the
figure, panel A), or between wheat yield and annual rainfall (r ≈
0.75, panel B). However, Pearson's r captures only linear
association, and its usefulness is greatly reduced when associations
are nonlinear. What has long been needed is a measure that
quantifies associations between variables generally, one that
reduces to Pearson's in the linear case, but that behaves as we'd
like in the nonlinear case. On page 1518 of this issue, Reshef et
al. (1) introduce the maximal information coefficient, or MIC, that
can be used to determine nonlinear correlations in data sets
equitably.&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-to-measure-it-for-different-settings&quot;&gt;
&lt;h2&gt;How to measure it for different settings?&lt;/h2&gt;
&lt;p&gt;Does it work? Is it reasonable?&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Gae-won You, Seung-won Hwang, Zaiqing Nie, Ji-Rong Wen: SocialSearch:
enhancing entity search with social network matching. EDBT 2011:
515-519 &lt;a class=&quot;reference external&quot; href=&quot;correlation/edbt11-YouHNW.pdf&quot;&gt;pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jongwuk Lee, Seung-won Hwang, Zaiqing Nie, Ji-Rong Wen: Query result
clustering for object-level search. KDD 2009: 1205-1214
&lt;a class=&quot;reference external&quot; href=&quot;correlation/kdd09-LeeHNW.pdf&quot;&gt;pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Roughly speaking, such keywords are those that most frequently co-occur
with the searched query terms&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;BlogScope: A System for Online Analysis of High Volume Text Streams&lt;/li&gt;
&lt;li&gt;Arlei Silva, Wagner Meira Jr., Mohammed J. Zaki: Mining
Attribute-structure Correlated Patterns in Large Attributed Graphs.
&lt;a class=&quot;reference external&quot; href=&quot;correlation/vldb12-SilvaJZ.pdf&quot;&gt;pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A structural correlation pattern is a dense subgraph induced by a
particular attribute set.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Z. Guan, J. Wu, Q. Zhang, A. Singh, and X. Yan. Assessing and ranking
structural correlation in graphs. In SIGMOD, pages 937–948, 2011.&lt;/li&gt;
&lt;li&gt;A. Khan, X. Yan, and K.-L. Wu. Towards proximity pattern mining in
large graphs. In SIGMOD, pages 867–878, 2010.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://www.42xdata.com/feed.atom">
    <title type="text">Buffered I/O and non-buffered I/O</title>
    <id>http://www.42xdata.com/2008/10/11/BufferedIO-and-non-BufferedIO</id>
    <updated>2008-10-11T00:00:00Z</updated>
    <link href="http://www.42xdata.com/2008/10/11/BufferedIO-and-non-BufferedIO" />
    <author>
      <name>42xdata</name>
    </author>
    <content type="html">&lt;p&gt;实验需要对Flash Disk做无系统缓冲的I/O操作，顺便了解了一下Linux下的I/O.&lt;/p&gt;
&lt;p&gt;Linux上的块设备的操作可以分为两类：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;第一类是使用C标准库中的fopen/fread/fwrite 系列的函数，我们可以称其为 buffered I/O。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体的I/O path如下:&lt;/p&gt;
&lt;blockquote&gt;
Application&amp;lt;-&amp;gt;Library Buffer&amp;lt;-&amp;gt;Operation System Cache&amp;lt;-&amp;gt;File System/Volume Manager&amp;lt;-&amp;gt;Device&lt;/blockquote&gt;
&lt;p&gt;library buffer是标准库提供的用户空间的buffer，可以通过setvbuf改变其大小。&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;2&quot;&gt;
&lt;li&gt;第二类是使用Linux的系统调用的open/read/write 系列的函数，我们可以称其为 non-buffered I/O。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I/O Path:&lt;/p&gt;
&lt;blockquote&gt;
Application&amp;lt;-&amp;gt; Operation System Cache &amp;lt;-&amp;gt;File System/Volume Manager&amp;lt;-&amp;gt;Device&lt;/blockquote&gt;
&lt;p&gt;此外，我们可以通过设置open的O_DIRECT标志来实现Direct I/O（或者叫Raw I/O）,即绕过OS Cache,直接读取Device ( that's what we want^o^ ), 等于将OS cache换成自己管理的cache。不过，Linus在邮件列表中建议不这么做，而是使用posix_fadvice, madvice。[2]中表明Direct I/O比buffered I/O的性能高很多。&lt;/p&gt;
&lt;p&gt;在使用O_DIRECT的注意buffer的address必须是block alignment的(i.e. 初始地址必须是boundary), 可以用posix_memalign()函数分配内存以得到这样的buffer。至于为什么要这样，与实现的mmap有关，参见[5].&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;[1] &lt;a class=&quot;reference external&quot; href=&quot;http://kerneltrap.org/node/7563&quot;&gt;Linux: Accessing Files With O_DIRECT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a class=&quot;reference external&quot; href=&quot;http://www.ukuug.org/events/linux2001/papers/html/AArcangeli-o_direct.html&quot;&gt;Andrea Arcangeli, O_DIRECT Whitepaper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a class=&quot;reference external&quot; href=&quot;http://articles.directorym.net/_A_Trip_Down_the_Data_Path_IO_and_Performance-a894569.html&quot;&gt;A Trip Down the Data Path: I/O and Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[4] &lt;a class=&quot;reference external&quot; href=&quot;http://articles.directorym.net/Operating_Systems_System_Calls_and_IO-a894576.html&quot;&gt;Operating Systems System Calls and I/O&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[5] &lt;a class=&quot;reference external&quot; href=&quot;http://www.xml.com/ldd/chapter/book/ch13.html&quot;&gt;Linux Device Drivers, 2nd Edition, Chapter 13 mmap and DMA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[6] &lt;a class=&quot;reference external&quot; href=&quot;http://topic.csdn.net/u/20080806/10/cdb1faa1-0146-4e96-8b12-26ba60acdbb5.html&quot;&gt;http://topic.csdn.net/u/20080806/10/cdb1faa1-0146-4e96-8b12-26ba60acdbb5.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[7] &lt;a class=&quot;reference external&quot; href=&quot;http://lists.alioth.debian.org/pipermail/parted-devel/2007-July/thread.html#1855&quot;&gt;http://lists.alioth.debian.org/pipermail/parted-devel/2007-July/thread.html#1855&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[8] &lt;a class=&quot;reference external&quot; href=&quot;http://www.ibm.com/developerworks/cn/linux/l-cn-read/&quot;&gt;Read系统调用剖析,&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>

